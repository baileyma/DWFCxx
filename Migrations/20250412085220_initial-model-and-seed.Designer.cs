// <auto-generated />
using System;
using DWFCxx.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DWFCxx.Migrations
{
    [DbContext(typeof(SeasonInfoContext))]
    [Migration("20250412085220_initial-model-and-seed")]
    partial class initialmodelandseed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DWFCxx.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlueGoals")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int>("WhiteGoals")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlueGoals = 1,
                            Date = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Round = 1,
                            SeasonId = 1,
                            WhiteGoals = 4
                        },
                        new
                        {
                            Id = 2,
                            BlueGoals = 3,
                            Date = new DateTime(2025, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Round = 2,
                            SeasonId = 2,
                            WhiteGoals = 3
                        },
                        new
                        {
                            Id = 3,
                            BlueGoals = 5,
                            Date = new DateTime(2025, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Round = 3,
                            SeasonId = 3,
                            WhiteGoals = 3
                        });
                });

            modelBuilder.Entity("DWFCxx.Entities.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("WeatherSeason")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            WeatherSeason = "Spring",
                            Year = 2025
                        },
                        new
                        {
                            Id = 2,
                            WeatherSeason = "Summer",
                            Year = 2025
                        },
                        new
                        {
                            Id = 3,
                            WeatherSeason = "Autumn",
                            Year = 2025
                        },
                        new
                        {
                            Id = 4,
                            WeatherSeason = "Winter",
                            Year = 2026
                        });
                });

            modelBuilder.Entity("DWFCxx.Entities.Match", b =>
                {
                    b.HasOne("DWFCxx.Entities.Season", "Season")
                        .WithMany("Matches")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("DWFCxx.Entities.Season", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
